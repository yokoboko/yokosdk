plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

group = 'com.yo'
version = '0.1.2'

afterEvaluate {
    publishing {
        publications {
            mavenAar(MavenPublication) {
                groupId 'com.yo'
                artifactId 'yokosdk'
                version '0.2.0'
                from components.release
            }
        }

        repositories {
            maven {
                // buildDir, projectDir(module), rootDir
                url "$rootDir/releases"
            }
        }
    }
}


//publishing {
//    publications {
//        myLibrary(MavenPublication) {
////            from components.kotlin
//        }
//    }
//
//    repositories {
//        maven {
//            name = 'myRepo'
//            url = layout.buildDirectory.dir("repo")
//        }
//    }
//}

//publishing {
//    publications {
//        maven(MavenPublication) {
//            groupId = 'org.gradle.sample'
//            artifactId = 'library'
//            version = '1.1'
//
////            from components.kotlin
//        }
//    }
//}

//apply from: '../maven-publish-helper.gradle'

//apply plugin: 'maven-publish'

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
//afterEvaluate {
//    publishing {
//        publications {
//            // Creates a Maven publication called "release".
//            release(MavenPublication) {
//                // Applies the component for the release build variant.
//                from components.release
//
//                // You can then customize attributes of the publication as shown below.
//                groupId = 'com.example.MyLibrary'
//                artifactId = 'final'
//                version = '1.0'
//            }
//            // Creates a Maven publication called “debug”.
//            debug(MavenPublication) {
//                // Applies the component for the debug build variant.
//                from components.debug
//
//                groupId = 'com.example.MyLibrary'
//                artifactId = 'final-debug'
//                version = '1.0'
//            }
//        }
//    }
//}

//publishing {
//    publications {
//        release(MavenPublication) {
//            // Specify own groupId as package name of your library,
//            // otherwise it would just use project's name (=name of the root directory) by default.
//            groupId 'com.example'
//
//            // Specify custom artifactId if needed,
//            // otherwise it would use module's name by default.
//            //artifactId 'custom-artifact'
//
//            // You can specify custom version,
//            // otherwise it would use version from `android { defaultConfig { ... } }` by default.
//            //version = '1.0'
//        }
//    }
//}

//publishing {
//    publications {
//        bar(MavenPublication) {
//            groupId 'com.foo'
//            artifactId 'bar'
//            version '0.1.0'
//            artifact(sourceJar)
//            artifact("$buildDir/outputs/aar/yoko-sdk.aar")
//        }
//    }
//    repositories {
//        maven {
//            url "$buildDir/repo"
//        }
//    }
//}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation("com.squareup.okhttp3:okhttp:4.9.1")
}